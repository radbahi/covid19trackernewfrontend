{"version":3,"sources":["redux/actions.js","pages/signup.js","pages/login.js","components/worldmap.js","components/stories.js","components/virusinfo.js","pages/home.js","pages/index.js","pages/profile.js","routes.js","components/nav.js","App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js"],"names":["BASE_URL","USERS_URL","SPECIFIC_USER_URL","id","setUserAction","userObj","type","payload","dispatch","config","method","headers","body","JSON","stringify","fetch","then","r","json","data","user","console","log","localStorage","setItem","token","alert","errors","userId","clear","userCredentials","provinceObj","Accept","locations_id","Signup","props","useDispatch","useState","username","password","signupForm","setSignupForm","handleChange","e","target","name","value","onSubmit","preventDefault","history","userActions","push","onChange","placeholder","LoginPage","loginForm","setLoginForm","projection","geoEqualEarth","scale","translate","WorldMap","geographies","setGeographies","infectedAreas","setInfected","useSelector","state","useEffect","response","status","infectedData","worlddata","feature","objects","countries","features","infectedConfirmed","infectedDead","infectedRecovered","map","location","active","confirmed","deaths","recovered","style","backgroundColor","width","height","viewBox","className","d","i","key","geoPath","fill","length","stroke","strokeWidth","onClick","cityIndex","coordinates","lon","lat","parseInt","OverlayTrigger","trigger","placement","overlay","Popover","Title","as","country","Content","cx","cy","fill-opacity","Stories","stories","setStories","storyData","textAlign","overflow","display","flexDirection","marginRight","marginLeft","marginBottom","Card","Img","variant","alt","title","src","urlToImage","Body","Subtitle","publishedAt","Text","description","Button","href","url","VirusInfo","justifyContent","alignItems","marginTop","fontSize","frameborder","allow","allowfullscreen","Home","loggedIn","Login","Profile","locations","setLocations","countryData","text","error","Dropdown","fluid","search","selection","options","event","Routes","path","component","Pages","exact","Nav","to","App","Boolean","window","hostname","match","x","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.40144311.chunk.js","sourcesContent":["const BASE_URL = \"https://sheltered-crag-77668.herokuapp.com\";\nconst USERS_URL = BASE_URL + \"/users\";\nconst LOGIN_URL = BASE_URL + \"/login\";\nconst SPECIFIC_USER_URL = (id) => USERS_URL + \"/\" + id;\n\n// Redux Actions\n\nconst setUserAction = (userObj) => ({\n  type: \"SET_USER\",\n  payload: userObj,\n});\n\nconst clearUserAction = () => ({\n  type: \"CLEAR_USER\",\n});\n\n// Fetch\n\nconst newUserToDB = (userObj) => (dispatch) => {\n  const config = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userObj),\n  };\n  fetch(USERS_URL, config)\n    .then((r) => r.json())\n    .then((data) => {\n      if (data.user) {\n        console.log(data);\n        dispatch(setUserAction(data.user));\n        localStorage.setItem(\"token\", data.token);\n      } else {\n        alert(data.errors); // HAS KEY OF ERRORS ANYWAY DESPITE SUCCESSFUL CREATION\n      }\n    });\n};\n\nconst deleteUserFromDB = (userId) => (dispatch) => {\n  const config = {\n    method: \"DELETE\",\n  };\n  fetch(SPECIFIC_USER_URL(userId), config).then((r) => {\n    dispatch(clearUserAction());\n    localStorage.clear();\n  });\n};\n\nconst updateUserFromDB = (userId, provinceObj) => (dispatch) => {\n  const config = {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify({ locations_id: provinceObj }),\n  };\n  fetch(SPECIFIC_USER_URL(userId), config)\n    .then((r) => r.json())\n    .then((data) => {\n      dispatch(setUserAction(data));\n    });\n};\n\nconst loginUserToDB = (userCredentials) => (dispatch) => {\n  const config = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userCredentials),\n  };\n  fetch(LOGIN_URL, config)\n    .then((r) => r.json())\n    .then((data) => {\n      console.log(data)\n      if (data.user) {\n        dispatch(setUserAction(data.user));\n        localStorage.setItem(\"token\", data.token);\n      } else {\n        alert(\"User and/or password is incorrect.\"); // LOADS SLOWLY\n      }\n    });\n};\n\n// const persistUser = () => (dispatch) => { // NEED TO GET THIS TO WORK WITH EXPRESS. NEED AUTH STUFF.\n//   const config = {\n//     method: \"GET\",\n//     headers: {\n//       Authorization: `bearer ` + localStorage.token,\n//     },\n//   };\n//   console.log(localStorage.token)\n//   fetch(PERSIST_URL, config)\n//     .then((r) => r.json())\n//     .then((userInstance) => {\n//       dispatch(setUserAction(userInstance));\n//     });\n// };\n\nconst logoutUser = () => (dispatch) => {\n  dispatch(clearUserAction());\n  localStorage.clear();\n};\n\nexport default {\n  newUserToDB,\n  deleteUserFromDB,\n  loginUserToDB,\n  // persistUser,\n  logoutUser,\n  updateUserFromDB,\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport userActions from \"../redux/actions.js\";\n\nconst Signup = (props) => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n\n  // Setting up local state using the useState hook\n  const [signupForm, setSignupForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // Controlled form functions\n  const handleChange = (e) =>\n    setSignupForm({ ...signupForm, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { history } = props;\n    dispatch(userActions.newUserToDB(signupForm));\n    history.push(\"/\");\n  };\n\n  // Destructuring keys from our local state to use in the form\n  const { username, password } = signupForm;\n\n  // Component code\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Signup Page</h1>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder=\"Username\"\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        placeholder=\"Password\"\n      />\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport userActions from \"../redux/actions\";\n\nconst LoginPage = (props) => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [loginForm, setLoginForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // controlled form functions\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n    props.history.push(\"/\");\n  };\n\n  const handleChange = (e) =>\n    setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n\n  // Destructuring keys from our local state to use in the form\n  const { username, password } = loginForm;\n\n  // Component code\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Login Page</h1>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder=\"Username\"\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        placeholder=\"Password\"\n      />\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default LoginPage;","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { geoEqualEarth, geoPath } from 'd3-geo'\nimport { feature } from 'topojson-client'\nimport { Popover, OverlayTrigger } from 'react-bootstrap'\n\nconst projection = geoEqualEarth()\n  .scale(160)\n  .translate([800 / 2, 450 / 2])\n\nconst WorldMap = () => {\n  const [geographies, setGeographies] = useState([]) // NEED TO USE STATE\n  const [infectedAreas, setInfected] = useState([])\n  const user = useSelector((state) => state.user)\n\n  useEffect(() => {\n    fetch('https://sheltered-crag-77668.herokuapp.com/locations').then(\n      (response) => {\n        if (response.status !== 200) {\n          console.log(`There was a problem: ${response.status}`)\n          return\n        }\n        response.json().then((infectedData) => {\n          // console.log(infectedData)\n          setInfected(infectedData)\n        })\n      }\n    )\n  }, [])\n\n  // const handleHover = (i) => {\n  //   console.log(infectedAreas[i]);\n  //   return (\n  //     <Popover id=\"popover-basic\">\n  //       <Popover.Title as=\"h3\">{infectedAreas[i].title}</Popover.Title>\n  //       <Popover.Content>\n  //         Infected: {infectedAreas[i].confirmed}\n  //       </Popover.Content>\n  //     </Popover>\n  //   );\n  // };\n\n  useEffect(() => {\n    // POSSIBLY THIS CAUSING A HEROKU REQUEST TIMEOUT?\n    fetch('/world-110m.json').then((response) => {\n      if (response.status !== 200) {\n        console.log(`There was a problem: ${response.status}`)\n        return\n      }\n      response.json().then((worlddata) => {\n        setGeographies(feature(worlddata, worlddata.objects.countries).features)\n      })\n    })\n  }, [])\n\n  const handleCityClick = (cityIndex) => {\n    console.log('Clicked on city: ', geographies[cityIndex])\n  }\n\n  // const handleMarkerClick = (i) => {\n  //   console.log(\"Marker: \", infectedAreas[i]);\n  // };\n  let infectedActive = 0\n  let infectedConfirmed = 0\n  let infectedDead = 0\n  let infectedRecovered = 0\n  const divStyle = {\n    backgroundColor: 'white',\n  }\n\n  infectedAreas.map((location) => {\n    infectedActive = infectedActive + location.active\n    infectedConfirmed = infectedConfirmed + location.confirmed\n    infectedDead = infectedDead + location.deaths\n    infectedRecovered = infectedRecovered + location.recovered\n  })\n  return (\n    <div style={divStyle}>\n      <h2>Global Stats</h2>\n      <h3>\n        Infected: {infectedConfirmed}. Dead: {infectedDead}. Recovered:{' '}\n        {infectedRecovered}.\n      </h3>\n\n      <svg width={900} height={475} viewBox='0 0 900 475'>\n        <g className='cities'>\n          {geographies.map((d, i) => (\n            <path\n              key={`path-${i}`}\n              d={geoPath().projection(projection)(d)}\n              className='province'\n              fill={`rgba(38,50,56,${(1 / geographies.length) * i})`} // maybe this to change opacity?\n              stroke='#FFFFFF'\n              strokeWidth={0.5}\n              onClick={() => handleCityClick(i)}\n            />\n          ))}\n        </g>\n        <g className='markers'>\n          {infectedAreas.map((location, i) => {\n            let coordinates = [location.lon, location.lat]\n            //  let arr = projection([city.longitude, city.latitude])\n            //  console.log(city)\n\n            if (user.locations_id && user.locations_id !== 500000) {\n              if (parseInt(user.locations_id) === parseInt(location.id)) {\n                return (\n                  <OverlayTrigger\n                    trigger='hover'\n                    placement='top'\n                    overlay={\n                      <Popover id='popover-basic'>\n                        <Popover.Title as='h3'>\n                          {infectedAreas[i].country}\n                        </Popover.Title>\n                        <Popover.Content>\n                          Confirmed: {infectedAreas[i].confirmed}. Active:{' '}\n                          {infectedAreas[i].active} Dead:{' '}\n                          {infectedAreas[i].deaths}. Recovered:{' '}\n                          {infectedAreas[i].recovered}.\n                        </Popover.Content>\n                      </Popover>\n                    }\n                  >\n                    <circle\n                      key={`marker-${i}`}\n                      cx={projection(coordinates)[0]}\n                      cy={projection(coordinates)[1]}\n                      r={location.active > 1000 ? 14 : location.active * 0.01}\n                      fill='#E91E63'\n                      fill-opacity='0.7'\n                      stroke='#FFFFFF'\n                      className='marker'\n                      // onClick={() => handleMarkerClick(i)}\n                      // onMouseEnter={handleHover}\n                    />\n                  </OverlayTrigger>\n                )\n              }\n            }\n            if (\n              parseInt(user.locations_id) === 500000 ||\n              user.status === 500 ||\n              !user.locations_id\n            ) {\n              return (\n                <OverlayTrigger\n                  trigger='hover'\n                  placement='top'\n                  overlay={\n                    <Popover id='popover-basic'>\n                      <Popover.Title as='h3'>\n                        {infectedAreas[i].country}\n                      </Popover.Title>\n                      <Popover.Content>\n                        Confirmed: {infectedAreas[i].confirmed}. Active:{' '}\n                        {infectedAreas[i].active} Dead:{' '}\n                        {infectedAreas[i].deaths}. Recovered:{' '}\n                        {infectedAreas[i].recovered}.\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <circle\n                    key={`marker-${i}`}\n                    cx={projection(coordinates)[0]}\n                    cy={projection(coordinates)[1]}\n                    r={location.active > 1000 ? 14 : location.active * 0.01}\n                    fill='#E91E63'\n                    fill-opacity='0.7'\n                    stroke='#FFFFFF'\n                    className='marker'\n                    // onClick={() => handleMarkerClick(i)}\n                    // onMouseEnter={() => handleHover(i)}\n                  />\n                </OverlayTrigger>\n              )\n            }\n          })}\n        </g>\n      </svg>\n      <h1>News on the virus below</h1>\n    </div>\n  )\n}\n\nexport default WorldMap\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\n\nconst Stories = () => {\n  const [stories, setStories] = useState([]);\n  useEffect(() => {\n    fetch(\"https://sheltered-crag-77668.herokuapp.com/stories\").then((response) => {\n      if (response.status !== 200) {\n        console.log(`There was a problem: ${response.status}`);\n        return;\n      }\n      response.json().then((storyData) => {\n        console.log(storyData);\n        setStories(storyData);\n      });\n    });\n  }, []);\n\n  const divStyle = {\n    height: \"800px\",\n    textAlign: \"center\",\n    overflow: \"scroll\",\n    display: \"flex\",\n    flexDirection: 'column',\n    // overflow: \"scroll\",\n    // textAlign: 'right',\n    // flexGrow: 2,\n    // flexShrink: 2,\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    // flexBasis: \"20em\",\n    // margin: '3vh',\n    // padding: '50vh',\n    // marginTop: '-em',\n    marginRight: '55vw',\n    marginLeft: '1vw',\n    marginBottom: '10em'\n    // padding: '20vh',\n    // marginLeft: 'auto',\n    // flexWrap: 'wrap',\n    // position: 'fixed',\n    // height: '100%'\n  };\n\n  // const columns = _.times(1, (i) => (\n  //     <Grid.Column key={i}>\n  //       <Image src='https://upload.wikimedia.org/wikipedia/commons/6/6a/Ubuntu_19.10_Eoan_Ermine.png' />\n  //       Text\n  //     </Grid.Column>\n  //   ))\n\n  return (\n    <div style={divStyle}>\n      {stories.map((stories) => {\n        return (\n          <Card>\n            <Card.Img\n              variant=\"top\"\n              alt={stories.title}\n              src={stories.urlToImage}\n            />\n            <Card.Body>\n              <Card.Title>{stories.title}</Card.Title>\n              <Card.Subtitle>{stories.publishedAt}.</Card.Subtitle>\n              <Card.Text>{stories.description}</Card.Text>\n              <Button variant=\"primary\" target=\"_blank\" href={stories.url}>\n                Go to story\n              </Button>\n            </Card.Body>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\n// useEffect(() => {\n//     fetch(\"http://localhost:3000/provinces\")\n//         .then(response => {\n//         if (response.status !== 200) {\n//             console.log(`There was a problem: ${response.status}`)\n//             return\n//         }\n//             response.json().then(infectedData => {\n//                 // console.log(infectedData)\n//                 setInfected(infectedData)\n//             })\n//         })\n// }, [])\n\nexport default Stories;\n","import React from \"react\";\n\nconst VirusInfo = () => {\n  const divStyle = {\n    display: \"flex\",\n    flexDirection: 'column',\n    // overflow: \"scroll\",\n    // textAlign: 'right',\n    // flexGrow: 2,\n    // flexShrink: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    // flexBasis: \"20em\",\n    // margin: '3vh',\n    // padding: '50vh',\n    marginTop: '-113em',\n    marginRight: '0.5vw',\n    marginLeft: '60em',\n    // padding: '20vh',\n    // marginLeft: 'auto',\n    // flexWrap: 'wrap',\n    // position: 'fixed',\n    height: '100%'\n  };\n  const pStyle = {\n    fontSize: \"18px\",\n\n  };\n\n  return (\n    <div style={divStyle} id=\"VirusInfo\">\n      <h1>Information about COVID-19 from WHO</h1>\n      <ul style={pStyle}>\n        <li>\n          Coronavirus disease (COVID-19) is an infectious disease caused by a\n          newly discovered coronavirus.\n        </li>\n        <li>\n          Most people infected with the COVID-19 virus will experience mild to\n          moderate respiratory illness and recover without requiring special\n          treatment. Older people, and those with underlying medical problems\n          like cardiovascular disease, diabetes, chronic respiratory disease,\n          and cancer are more likely to develop serious illness.\n        </li>\n        <li>\n          The best way to prevent and slow down transmission is be well informed\n          about the COVID-19 virus, the disease it causes and how it spreads.\n          Protect yourself and others from infection by washing your hands or\n          using an alcohol based rub frequently and not touching your face.\n        </li>\n        <li>\n          The COVID-19 virus spreads primarily through droplets of saliva or\n          discharge from the nose when an infected person coughs or sneezes, so\n          it’s important that you also practice respiratory etiquette (for\n          example, by coughing into a flexed elbow).\n        </li>\n      </ul>\n      <p style={{ textAlign: \"center\" }}>\n        <h3>\n          This video below goes into more detail. Please consider watching it.\n        </h3>\n      </p>\n      <iframe title=\"corona-vid\"\n        width=\"560\"\n        height=\"315\"\n        src=\"https://www.youtube.com/embed/BtN-goy9VOY\"\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen\n      ></iframe>\n    </div>\n  );\n};\n\nexport default VirusInfo;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport WorldMap from \"../components/worldmap.js\";\nimport Stories from \"../components/stories.js\";\nimport VirusInfo from \"../components/virusinfo.js\";\n\nconst Home = () => {\n  // const state = useSelector(state => state)\n  // const dispatch = useDispatch()\n  // console.log(state)\n  const username = useSelector((state) => state.user.username);\n  const loggedIn = username ? (\n    <h1>Welcome, {username}</h1>\n  ) : (\n    <h1>Nobody is logged in</h1>\n  );\n\n  return (\n    <div>\n      {loggedIn}\n      <WorldMap />\n      <Stories />\n      <VirusInfo />\n    </div>\n  );\n};\n\nexport default Home;\n","import Signup from \"./signup\";\nimport Login from \"./login\";\nimport Home from \"./home\";\nimport Profile from \"./profile\";\n\nexport default {\n  Signup,\n  Login,\n  Home,\n  Profile,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport userActions from \"../redux/actions\";\n// Use prettier to format your code and keep it neat\n// Hit command shift p and hit enter or select it\nconst Profile = (props) => {\n  // const state = useSelector(state => state)\n  // const dispatch = useDispatch()\n  // console.log(state)\n  const dispatch = useDispatch();\n\n  const [locations, setLocations] = useState([]);\n\n  // These are being refactored into hooks\n  // const countryList = [];\n  // const provinceList = [];\n\n  // const getCountryProvinces = (event, { value }) => {\n  //   fetch(`http://localhost:3000/locations/${value}/`).then(\n  //     (response) => {\n  //       // console.log(response.json())\n  //       if (response.status !== 200) {\n  //         console.log(`There was a problem: ${response.status}`);\n  //         return;\n  //       }\n  //       response.json().then((provinceData) => {\n  //         setLocations(\n  //           provinceData.map((province) => {\n  //             return {\n  //               key: province.id,\n  //               value: province.id,\n  //               text: province.title,\n  //             };\n  //           })\n  //         );\n  //       });\n  //     }\n  //   );\n  //   //setSelectedCountry({ id: value });\n  //   // console.log(value);\n  //   // debugger\n  // };\n\n  const getProvince = (event, { value }) => {\n    console.log(value);\n    dispatch(userActions.updateUserFromDB(id, value));\n    // countryTitle = provinces.find(province => province.value === location).text\n  };\n\n  // const getProvinces = () => {\n  //   fetch(\n  //     `http://localhost:3000/countries/${selectedCountry.id}/provinces`\n  //   ).then(response => {\n  //     // console.log(response.json())\n  //     if (response.status !== 200) {\n  //       console.log(`There was a problem: ${response.status}`);\n  //       return;\n  //     }\n  //     response.json().then(provinceData => {\n  //       setProvinces(\n  //         provinceData.map(province => {\n  //           return {\n  //             key: province.id,\n  //             value: province.id,\n  //             text: province.title\n  //           };\n  //         })\n  //       );\n  //     });\n  //   });\n  // };\n\n  useEffect(() => {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch\n    try {\n      fetch(\"https://sheltered-crag-77668.herokuapp.com/locations\").then((response) => {\n        if (response.status !== 200) {\n          console.log(`There was a problem: ${response.status}`);\n          return;\n        }\n        response.json().then((countryData) => {\n          console.log(countryData);\n          // { key: 'bj', value: 'bj', flag: 'bj', text: 'Benin' }\n          setLocations(\n            countryData.map((location) => {\n              return {\n                key: location.id,\n                value: location.id,\n                text: `${location.country}`,\n              };\n            })\n          );\n          // countryList.push(countryData)\n          // go to chrome\n          // Instead of creating the object here, why not send a response from your backend\n          // That has the data sanitized in the fashion you have on lines 53-55.\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  // Instead of using this useEffect, let's create an api endpoint that searches province per country id.\n  // Example: We fetch a country ID for Iceland, we only get provinces for iceland.\n  // First let's create that api endpoint\n  // useEffect(() => {\n  //   if (selectedCountry) {\n  //     fetch(\n  //       `http://localhost:3000/countries/${selectedCountry.id}/provinces`\n  //     ).then(response => {\n  //       // console.log(response.json())\n  //       if (response.status !== 200) {\n  //         console.log(`There was a problem: ${response.status}`);\n  //         return;\n  //       }\n  //       response.json().then(provinceData => {\n  //         setProvinces(\n  //           provinceData.map(province => {\n  //             return {\n  //               key: province.id,\n  //               value: province.id,\n  //               text: province.title\n  //             };\n  //           })\n  //         );\n  //       });\n  //     });\n  //   }\n  // }, [selectedCountry]);\n\n  const location = useSelector((state) => state.user.locations_id);\n  const id = useSelector((state) => state.user.id);\n\n  // const displayLocation = (e) => {\n  //   provinces.map((province) => {\n  //     if (province.id === location) {\n  //       return province.title;\n  //     }\n  //     // FIX THIS UP FOR LATER USE\n  //   });\n  // };\n\n\n  const loggedIn = location ? (\n    <h3>Your set location is {location}.</h3>\n  ) : (\n    <h3>You don't have a set location.</h3>\n  );\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    dispatch(userActions.deleteUserFromDB(id));\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div>\n      Select your location below\n      {/* <Dropdown\n        placeholder=\"Country\"\n        fluid\n        search\n        selection\n        options={countries}\n        onChange={getCountryProvinces}\n      /> */}\n      <Dropdown\n        placeholder=\"Location\"\n        fluid\n        search\n        selection\n        options={locations}\n        onChange={getProvince}\n      />\n      {loggedIn}\n      <button onClick={handleDelete}>Delete your profile</button>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Pages from \"./pages\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/signup\" component={Pages.Signup} />\n      <Route path=\"/login\" component={Pages.Login} />\n      <Route path=\"/profile\" component={Pages.Profile} />\n      <Route exact path=\"/\" component={Pages.Home} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport userActions from \"../redux/actions\";\nimport { Button } from \"semantic-ui-react\";\n\nconst Nav = () => {\n  const username = useSelector((state) => state.user.username);\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(userActions.logoutUser());\n  };\n  return (\n    <nav\n      style={{\n        backgroundColor: \"#4A586E\",\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n      }}\n    >\n      <Link to=\"/\">\n        <Button>Home</Button>\n      </Link>\n      {!username ? (\n        <Link to=\"/signup\">\n          <Button>Signup</Button>\n        </Link>\n      ) : (\n        <Link to=\"/profile\">\n          <Button>Profile</Button>\n        </Link>\n      )}\n      {!username ? (\n        <Link to=\"/login\">\n          <Button>Login</Button>\n        </Link>\n      ) : (\n        <Link to=\"/\" onClick={handleLogout}>\n          <Button>Logout</Button>\n        </Link>\n      )}\n    </nav>\n  );\n};\n\nexport default Nav;\n\n// import { useSelector } from 'react-redux';\n// import WorldMap from '../components/worldmap.js'\n// import TestMap from '../components/testmap.js'\n\n// const Home = () => {\n//   const username = useSelector(state => state.username);\n//   const text = username ? (\n//     <h1>{username} is currently logged in</h1>\n//   ) : (\n//     <h1>Nobody is logged in</h1>\n//   );\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./routes\";\nimport \"./App.css\";\nimport Nav from \"./components/nav.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// USESTATE IS LIKE THIS\n//const [loading, setLoading] = useState(false)\n//       ^ THIS IS TO CALL, SETLOADING IS TO DEFINE THE LOADING'S \"STATE\". EACH VARIABLE HAS IT'S OWN \"STATE\".\n// TO GET THE VALUES OF THAT THING'S STATE, JUST CALL LOADING. OR WHATEVER U NAMED THE FIRST THING.\n\n// // state = {\n// //   user {\n//    name:'',\n//    password: '',\n// // location: ''\n// // }}\n\n// userReducers\n// Actions: create,\n// destinationReducers\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nfunction App() {\n  // const username = useSelector(state => state.username);\n  // const handleClick = () => {\n  //   const payload = {\n  //     username: 'John',\n  //   }\n  //   dispatch({type: \"SET_USER\", payload: payload})\n  // }\n\n  // useEffect(() => {\n  //   dispatch(Action.persistUser());\n  //   // persist is already done in actions.js file\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Nav />\n        <Routes />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\n\n// USER\nconst UserReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case \"SET_USER\":\n      return payload;\n    case \"CLEAR_USER\":\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst x = {\n  user: UserReducer,\n};\n\nexport default combineReducers(x);\n","// import {createStore, applyMiddleware} from 'redux\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport combineReducers from \"./reducers.js\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  combineReducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport createStore from \"./redux/store.js\";\n\nReactDOM.render(\n  <Provider store={createStore}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}